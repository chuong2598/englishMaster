{"version":3,"sources":["containers/admin/Word.js","components/FacebookBtn.js","containers/cognito/Login.js","Config.js","containers/cognito/Register.js","containers/Pronounce.js","containers/User.js","App.js","index.js"],"names":["React","Component","FacebookBtn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","statusChangeCallback","response","console","log","status","handleResponse","authResponse","handleError","checkLoginState","window","FB","getLoginStatus","handleClick","login","scope","state","id","username","email","fetch","headers","Accept","Content-Type","method","body","JSON","stringify","user_id","Promise","res","rej","hasFbLoaded","setTimeout","error","alert","_this2","concat","then","json","words","dispatch","type","payload","data","token","accessToken","expiresIn","expires_at","Date","getTime","user","api","userID","fields","name","_this3","getWordsOfUser","addUser","document","getElementById","className","Auth","federatedSignIn","history","push","_context2","t0","react_default","a","createElement","class","block","bsSize","bsStyle","text","onClick","withRouter","Login","pwd","isAuthenticating","setState","e","defineProperty","target","value","event","preventDefault","innerHTML","signIn","currentAuthenticatedUser","attributes","sub","path","admin","role","onChange","handleChange","bind","placeholder","Link","to","handleSubmit","src_components_FacebookBtn","Config","REGION","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","Register","confirmPwd","confirmationCode","newUser","test","validateEmail","length","signUp","password","_context","message","confirmSignUp","handleRegister","handleConfirm","registerForm","confirmForm","Pronounce","_this$props","recognition","transcript","startListening","stopListening","resetTranscript","browserSupportsSpeechRecognition","word","lang","onend","toLowerCase","includes","onstart","onMouseDown","onMouseUp","aria-hidden","SpeechRecognition","autoStart","lastestIndex","User","difficulty","guessing_Word","displayed_hello","takingTest","answer","learnMode","minute","second","startTime","d","hour","checkTime","getHours","getMinutes","getSeconds","mode","vietnamese","waiting","sequence","random","randomInt","answerIndex","random_nb","Math","floor","answers","indexOf_correctAnswer","index","current_word","allWords","userId","getAnswers","ms","resolve","settup_test","selectLevel","selectMode","react_interval_lib_default","timeout","enabled","callback","recordTime","map","s","submitAnswer","time","_this4","responsiveVoice","speak","similar_word","ex1","ex2","containers_Pronounce","renderTest","renderWordDetail","renderHello","App","get_words","href","User_User","userWords","renderLoggin","connect","centralState","editedWord","authenticated","Amplify","configure","mandatorySignIn","region","config","userPoolId","identityPoolId","userPoolWebClientId","combineReducers","arguments","undefined","action","authenticating","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","BrowserRouter","src_App_0"],"mappings":"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","file":"static/js/main.750765b3.chunk.js","sourcesContent":["import React from 'react';\n// import WordForm from './WordForm.js';\nimport \"./Word.css\"\n\n\nexport default class Word extends React.Component  {\n    constructor() {\n        super()\n        this.state = { wordID_be_deleted: \"\", action: \"\", active: \"\"}\n    }\n\n    get_words()  {\n        fetch(`https://www.englishmaster.icu:9000/admin`)\n                .then(res => res.json())\n                .then(words =>\n                      this.props.dispatch({ type: \"GET_WORDS\", payload: words })\n                );\n    }\n\n    componentDidMount()  {\n        console.log(this.props.words)\n        this.get_words();\n    }\n\n    on_add(){\n        this.setState({ action: \"Add Word Form\", active: \"Add Word\", edited_word: -1 });\n    }\n\n    on_edit(id) {\n        var editted_word = this.props.words.filter(p=> p.id === id)\n        this.setState({ action: \"Edit Word Form\", active: \"Save Changes\" })\n        this.props.dispatch({type: \"GET_EDITED_WORD\", payload: editted_word[0]})\n    }\n\n    on_delete(e){\n\n        this.setState({wordID_be_deleted: e.target.value})\n    }\n\n    render()  {\n        return  (\n            <div>\n                     <button\n                        data-toggle=\"modal\"\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={this.on_add.bind(this)}\n                        data-target=\"#add-update-form\"\n                        data-backdrop=\"static\" data-keyboard=\"false\"\n                    >\n                        + Add\n          </button> \n                    <table className=\"table table-hover\">\n                        <thead className=\"thead-dark\">\n                            <tr>\n                                <th>No</th>\n                                <th>Word</th>\n                                <th>Meaning</th>\n                                <th>Synonym</th>\n                                <th>Example 1</th>\n                                <th>Example 2</th>\n                                <th className = \"text-center\">Action</th>\n                            </tr>\n                        </thead>\n                        <tbody> \n                            {this.props.words.map((s, index) =>\n                                <tr key={index}>\n                                    <td>{s.id}</td>\n                                    <td>{s.word}</td>\n                                    <td>{s.vietnamese}</td>\n                                    <td>{s.similar_word}</td>\n\n                                    <td>{s.ex1}</td>\n                                    <td>{s.ex2}</td>\n\n                                    <td>\n                                         <button\n                                               onClick={() => this.on_edit(s.id)}\n                                            data-toggle=\"modal\"\n                                            type=\"button\"\n                                            className=\"btn btn-warning  category-button \"\n                                            data-backdrop=\"static\" data-keyboard=\"false\"\n                                            data-target=\"#add-update-form\"\n                                        >\n                                            <i className=\"fa fa-pencil\" aria-hidden=\"true\" />\n                                            Edit\n                    </button>\n\n                                       <button\n                                            type=\"button\"\n                                            className=\"btn btn-danger category-button\"\n                                            data-toggle=\"modal\"\n                                            data-target=\"#delete-form\"\n                                            value={s.id}\n                                          onClick={this.on_delete.bind(this)}\n                                        >\n                                            <i className=\"fa fa-trash-o\" aria-hidden=\"true\" />\n                                            Delete\n                    </button>  \n\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                    \n                   {/* <WordForm words = {this.props.words} dispatch = {this.props.dispatch} action = {this.state.action} active = {this.state.active}\n                     editedWord = {this.props.editedWord} wordID_be_deleted = {this.state.wordID_be_deleted}  />  */}\n\n                    </div>\n                        )\n                    }\n                    \n}","import React from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { withRouter } from 'react-router-dom'\nimport \"./FacebookBtn.css\"\n\n\nfunction waitForInit() {\n    return new Promise((res, rej) => {\n        const hasFbLoaded = () => {\n            if (window.FB) {\n                res();\n            } else {\n                setTimeout(hasFbLoaded, 300);\n            }\n        };\n        hasFbLoaded();\n    });\n}\n\nclass FacebookBtn extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            //   isLoading: true\n        };\n    }\n\n    addUser(id, username, email) {\n        fetch(`https://www.englishmaster.icu:9000/users`, {\n            headers: {\n                Accept: \"application/json, text/plain, */*\",\n                \"Content-Type\": \"application/json\"\n            },\n            method: \"post\",\n            body: JSON.stringify({ user_id: id, username: username, email: email })\n        })\n    }\n\n    async componentDidMount() {\n        await waitForInit();\n        // this.setState({ isLoading: false });\n    }\n\n    statusChangeCallback = response => {\n        console.log(response)\n        console.log(response)\n        if (response.status === \"connected\") {\n            this.handleResponse(response.authResponse);\n        } else {\n            this.handleError(response);\n        }\n    };\n\n    checkLoginState = () => {\n        window.FB.getLoginStatus(this.statusChangeCallback);\n    };\n\n    handleClick = () => {\n        window.FB.login(this.checkLoginState, { scope: \"public_profile,email\" });\n    };\n\n    handleError(error) {\n        alert(error);\n    }\n\n    getWordsOfUser(id) {\n        fetch(`https://www.englishmaster.icu:9000/wordsOfUser/${id}`)\n            .then(res => res.json())\n            .then(words => {\n                this.props.dispatch({ type: \"GET_USER_WORDS\", payload: words })\n                console.log(words)\n            }\n            );\n    }\n\n    async handleResponse(data) {\n        const { email, accessToken: token, expiresIn } = data;\n        const expires_at = expiresIn * 1000 + new Date().getTime();\n        const user = { email };\n        console.log(\"data:\")\n        console.log(data)\n\n        // call Facebook API to get Facebook user Info\n        window.FB.api(\n            `/${data.userID}`,\n            'GET',\n            { \"fields\": \"birthday,name,email,hometown\" },\n            response => {\n                console.log(response.id)\n                console.log(response.name)\n                console.log(response.email)\n                // display user name\n                this.props.dispatch({ type: \"GET_USERNAME\", payload: response.name })\n                this.props.dispatch({ type: \"GET_USERID\", payload: response.id })\n\n                this.getWordsOfUser(response.id)\n                // add user email to database to send email everyday\n                this.addUser(response.id, response.name, response.email)\n            }\n        );\n\n\n        try {\n            document.getElementById(\"loadFBLogin\").className = \"spinner-border text-dark spinner-border-sm\"\n            const response = await Auth.federatedSignIn(\n                \"facebook\",\n                { token, expires_at },\n                user\n            );\n            //   this.setState({ isLoading: false });\n            console.log(response)\n            this.props.dispatch({ type: \"AUTHENTICATE\", payload: true })\n            this.props.history.push(\"/user\")\n\n        } catch (e) {\n            document.getElementById(\"loadFBLogin\").className = \"\"\n            //   this.setState({ isLoading: false });\n            this.handleError(e);\n        }\n    }\n\n\n\n    render() {\n\n        return (\n            <div>\n                <button\n                    class=\"btn btn-lg btn-block fa fa-facebook\"\n                    block\n                    bsSize=\"large\"\n                    bsStyle=\"primary\"\n                    // className=\"FacebookButton\"\n                    text=\"Login with Facebook\"\n                    onClick={this.handleClick}\n                > Continue with Facebook\n                <span id = \"loadFBLogin\"></span>\n            </button>\n            </div>\n        );\n    }\n}\nexport default withRouter(FacebookBtn)","import React from 'react'\nimport { Auth } from \"aws-amplify\";\nimport { withRouter } from 'react-router-dom'\nimport { Link } from 'react-router-dom';\nimport admin from \"../admin/admin\"\nimport FacebookBtn from \"../../components/FacebookBtn\"\n\n\nclass Login extends React.Component {\n\n    constructor() {\n        super()\n        this.state = { username: \"\", pwd: \"\",isAuthenticating: true }\n    }\n\n    componentWillReceiveProps(props){\n        this.setState({isAuthenticating: props.isAuthenticating})\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        document.getElementById(\"error_account\").innerHTML = \"\"\n        try {\n            document.getElementById(\"loadLogin\").className = \"spinner-border text-dark spinner-border-sm\"\n            await Auth.signIn(this.state.username, this.state.pwd); \n            const user = await Auth.currentAuthenticatedUser();\n            console.log(\"login\")\n            this.props.dispatch({type: \"GET_USERNAME\", payload: user.username})\n            const user_id = user.attributes.sub\n            this.props.dispatch({type: \"GET_USERID\", payload: user_id})\n\n\n            var path = \"\"\n            if (admin.id == user_id) {\n                path = \"/admin\"\n            }\n            else {\n                path = \"/user\"\n            }\n\n            console.log(\"Log in\")\n            this.props.dispatch({ type: \"AUTHENTICATE\", payload: true })\n            this.props.history.push(path);\n        } catch (e) {\n            document.getElementById(\"loadLogin\").className = \"\"\n            document.getElementById(\"error_account\").innerHTML = \" <br/>Wrong username or password\"\n\n        }\n    }\n\n\n    render() {\n\n        return (\n            <div>\n                <div>\n                    {this.state.isAuthenticating?\n                        <div>\n                            <span class=\"spinner-border m-5\" role=\"status\"></span>\n                            <span class=\"spinner-border m-5\" role=\"status\"></span>\n                            <span class=\"spinner-border m-5\" role=\"status\"></span>\n\n                        </div>\n               \n                : <div className=\"col-md-8 offset-md-2\">\n                <div className=\"card\">\n                    <div className=\"card-header\">\n                    <h3 className=\"text-center\">English Master</h3> </div>\n                    \n                    <div className=\"card-body\">\n                        <div className=\"form-group\" onChange={this.handleChange.bind(this)}>\n                            <label>Username </label>\n                            <input\n                                placeholder=\"Please enter your user name\"\n                                className=\"form-control\"\n                                type=\"text\"\n                                name=\"username\"\n                            />\n\n                            <br />\n                            <label>Password </label>\n                            <input\n                                value={this.state.pwd}\n                                placeholder=\"Please enter your password\"\n                                className=\"form-control\"\n                                type=\"password\"\n                                name=\"pwd\"\n                            />\n\n                            \n                            <div className=\"error\" id=\"error_account\"></div>\n\n                        </div>\n                    </div>\n                    <div className=\"card-footer\">\n                        <Link to={\"/register\"}> <button className=\"btn btn-link\">Have not had an account?</button>  </Link>\n              \n                        <button className=\"btn btn-success float-right\" onClick={this.handleSubmit.bind(this)}><i className=\"fa fa-sign-in\"></i>\n                         Log in <span id = \"loadLogin\"></span></button>\n                     \n                        <br/>\n                        <br/>\n                            <FacebookBtn dispatch = {this.props.dispatch}  />\n                    </div>\n                </div>\n            </div>\n            }\n                    \n                </div>\n            </div>\n        )\n    }\n}\nexport default withRouter(Login)\n","export default {\n    cognito: {\n      REGION: \"us-east-1\",\n      USER_POOL_ID: \"us-east-1_PQ0hD3DIb\",\n      APP_CLIENT_ID: \"4i57bagjnlrem6l5ph8hepfjl4\",\n      IDENTITY_POOL_ID: \"us-east-1:91852e3c-678e-4a1f-8f1b-6a8dbc861280\"\n    },\n    social: {\n      FB: \"358417311590727\"\n    }\n  };","import React from 'react'\nimport { Auth } from \"aws-amplify\";\nimport { withRouter } from 'react-router-dom'\n\n\n\nclass Register extends React.Component {\n    constructor() {\n        super()\n        this.state = { username: \"\", email: \"\", pwd: \"\", confirmPwd: \"\", confirmationCode: \"\", newUser: null }\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    validateEmail(email) {\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email);\n    }\n\n\n    async handleRegister(e) {\n        e.preventDefault();\n        if (!this.validateEmail(this.state.email)) {\n            document.getElementById(\"registerErr\").innerHTML = \"Error: Invalid email\"\n            return\n        }\n        document.getElementById(\"registerErr\").innerHTML = \"\"\n        if (this.state.pwd != this.state.confirmPwd) {\n            document.getElementById(\"registerErr\").innerHTML = \"Error: Password does not match\"\n            this.setState({ pwd: \"\", confirmPwd: \"\" })\n            return\n        }\n        if(this.state.pwd.length <8){\n            document.getElementById(\"registerErr\").innerHTML = \"Error: Password must contain at leat 8 character\"\n            this.setState({ pwd: \"\", confirmPwd: \"\" })\n            return\n        }\n        try {\n            document.getElementById(\"loadRegister\").className = \"spinner-border text-dark spinner-border-sm\"\n            const newUser = await Auth.signUp({\n                username: this.state.username,\n                password: this.state.pwd,\n                attributes: { email: this.state.email }\n            });\n            this.setState({ newUser: newUser })\n            alert(\"Confirmation code has been sent to your email. Please check your emai and enter the code\")\n            document.getElementById(\"loadConfirm\").className = \"\"\n        } catch (e) {\n            document.getElementById(\"loadRegister\").className = \"\"\n            document.getElementById(\"registerErr\").innerHTML = `Error: ${e.message}`;\n        }\n    }\n\n    addUser(id) {\n        fetch(`https://www.englishmaster.icu:9000/users`, {\n            headers: {\n                Accept: \"application/json, text/plain, */*\",\n                \"Content-Type\": \"application/json\"\n            },\n            method: \"post\",\n            body: JSON.stringify({user_id: id, username: this.state.username, email: this.state.email})\n        })\n    }\n\n    async handleConfirm(e) {\n        e.preventDefault();\n        try {\n            document.getElementById(\"loadConfirm\").className = \"spinner-border text-dark spinner-border-sm\"\n            await Auth.confirmSignUp(this.state.username, this.state.confirmationCode);\n            var user = await Auth.signIn(this.state.username, this.state.pwd);\n            this.props.dispatch({ type: \"GET_USERNAME\", payload: user.username })\n            this.props.dispatch({ type: \"AUTHENTICATE\", payload: true })\n\n            user = await Auth.currentAuthenticatedUser();\n\n            const user_id = user.attributes.sub\n\n            this.props.dispatch({type: \"GET_USERID\", payload: user_id})\n\n            this.addUser(user_id)\n\n            this.props.history.push(\"/user\");\n\n        } catch (e) {\n            document.getElementById(\"loadConfirm\").className = \"\"\n            alert(e.message);\n        }\n    }\n\n    registerForm() {\n        return (\n            <div className=\"col-md-8 offset-md-2\">\n                <div className=\"card\">\n                    <div className=\"card-header\"><h3 className=\"text-center\">English Master</h3> </div>\n                    <div className=\"card-body\">\n                        <div className=\"form-group\" onChange={this.handleChange.bind(this)}>\n\n                            <label>User Name </label>\n                            <input\n                                placeholder=\"Please enter your user name\"\n                                className=\"form-control\"\n                                type=\"text\"\n                                name=\"username\"\n                            />\n                            <br />\n\n                            <label>Email </label>\n                            <input\n                                placeholder=\"Please enter your email\"\n                                className=\"form-control\"\n                                type=\"text\"\n                                name=\"email\"\n                            />\n                            <br />\n                            <label>Password </label>\n                            <input\n                                placeholder=\"Please enter your password\"\n                                className=\"form-control\"\n                                type=\"password\"\n                                name=\"pwd\"\n                                value={this.state.pwd}\n                            />\n\n                            <br />\n                            <label>Confirm password </label>\n                            <input\n                                placeholder=\"Please confirm your password\"\n                                className=\"form-control\"\n                                type=\"password\"\n                                name=\"confirmPwd\"\n                                value={this.state.confirmPwd}\n                            />\n                        </div>\n\n                        <span className=\"error\" id=\"registerErr\"> </span>\n                    </div>\n                    <div className=\"card-footer\">\n                        <button className=\"btn btn-success float-right\" onClick={this.handleRegister.bind(this)}><i className=\"fa fa-sign-in\"></i>Submit\n                        <span id = \"loadRegister\"></span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    confirmForm() {\n        return (\n            <div className=\"col-md-8 offset-md-2\">\n                <div className=\"card\">\n                    <div className=\"card-header\"><h3 className=\"text-center\">English Master</h3> </div>\n                    <div className=\"card-body\">\n                        <div className=\"form-group\" onChange={this.handleChange.bind(this)}>\n                            <br></br>\n                            <label>Code </label>\n                            <input\n                                placeholder=\"Please enter your confirmation code\"\n                                className=\"form-control\"\n                                type=\"number\"\n                                name=\"confirmationCode\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"card-footer\">\n                        <button className=\"btn btn-success float-right\" onClick={this.handleConfirm.bind(this)}><i className=\"fa fa-sign-in\"></i> Submit \n                        <span id = \"loadConfirm\"></span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.newUser === null\n                    ? this.registerForm()\n                    : this.confirmForm()\n                }\n\n            </div>\n        )\n    }\n}\nexport default withRouter(Register)\n","import React, { Component } from 'react'\nimport SpeechRecognition from 'react-speech-recognition'\n\nclass Pronounce extends Component {\n\n\n\n  render() {\n    const { recognition, transcript, startListening, stopListening, resetTranscript, browserSupportsSpeechRecognition } = this.props\n    const word = this.props.word\n    console.log(this.props)\n    if (!browserSupportsSpeechRecognition) {\n      return null\n    }\n    else {\n      recognition.lang = \"en-us\"\n    }\n\n    recognition.onend = function () {\n      if (transcript.toLowerCase().includes(word.toLowerCase())) {\n        document.getElementById(\"validate-pronouce\").innerHTML = `<i class=\"fa fa-check\" aria-hidden=\"true\"></i>Correct pronunciation`\n        document.getElementById(\"validate-pronouce\").className = \"text-success\"\n        // alert(\"CORRECT\")\n      }\n      else {\n        document.getElementById(\"validate-pronouce\").innerHTML = `<i class=\"fa fa-times\" aria-hidden=\"true\"></i>Wrong pronunciation. Detected: ${transcript}`\n        document.getElementById(\"validate-pronouce\").className = \"text-danger\"\n      }\n\n      recognition.onstart = function(){\n        document.getElementById(\"validate-pronouce\").innerHTML = \"\"\n      }\n      // stopListening()\n      resetTranscript()\n\n    }\n\n    \n\n    return (\n\n      <div>\n        <button onMouseDown={startListening} onMouseUp={stopListening}\n          className=\"btn btn-warning\">\n          <i class=\"fa fa-microphone\" aria-hidden=\"true\"></i>\n          Hold to speak\n          </button> \n          {/* <i onClick = {this.moreInfo.bind(this)} class=\"fa fa-info-circle\" aria-hidden=\"true\"></i> */}\n\n          <div id = \"validate-pronouce\"></div>\n\n        {/* <button onMouseDown={startListening} onMouseUp = {stopListening}>Hold to pronounce</button> */}\n      </div>\n    )\n  }\n}\n\nconst options = {\n  autoStart: false\n}\n\nexport default SpeechRecognition(options)(Pronounce)","import React from \"react\"\nimport Sound from 'react-sound';\nimport Pronounce from \"./Pronounce\";\nimport \"./User.css\"\nimport ReactInterval from 'react-interval';\n\nvar lastestIndex = 0\n\nexport default class User extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            difficulty: \"\",\n            guessing_Word: {}, displayed_hello: false, takingTest: false, answer: \"\", \n            learnMode: \"\", minute: 0, second: 0, startTime: \"\"\n        }\n        \n    }\n\n    componentWillReceiveProps(){\n        this.setState({guessing_Word: this.props.words})\n        console.log(\"Guessing word\")\n        console.log(this.state.guessing_Word)\n    }\n\n\n\n    getTime() {\n        var d = new Date();\n        var hour = this.checkTime(d.getHours())\n        var minute = this.checkTime(d.getMinutes())\n        var second = this.checkTime(d.getSeconds())\n        var time = `${hour}:${minute}:${second}`\n        return (time)\n    }\n\n    recordTime() {\n        if (this.state.second + 1 == 60) {\n            this.setState({ second: 0 })\n            this.setState({ minute: this.state.minute + 1 })\n        }\n        else {\n            this.setState({ second: this.state.second + 1 })\n        }\n    }\n\n\n\n    // ********************\n    // postRecord(user_id, word_id, timeStart, timeEnd, total_minutes) {\n    //     console.log(user_id, word_id, timeStart, timeEnd, total_minutes)\n    //     fetch(`https://www.englishmaster.icu:9000/timerecord`, {\n    //         headers: {\n    //             Accept: \"application/json, text/plain, */*\",\n    //             \"Content-Type\": \"application/json\"\n    //         },\n    //         method: \"post\",\n    //         body: JSON.stringify({ learner_id: user_id, word_id: word_id, timeStart: timeStart, timeEnd: timeEnd, total_minutes: total_minutes })\n    //     })\n    // }\n\n\n\n    settup_test(mode) {\n        console.log(mode)\n        if(mode != \"chosen\"){\n            this.setState({takingTest: true})  \n               \n        }\n        \n    }\n\n    handleClick(e) {\n        document.getElementById(\"wrong-answer\").innerHTML = \"\"\n        if (this.state.answer != \"\") {\n            document.getElementById(this.state.answer).className = \"answ btn btn-secondary\"\n        }\n        document.getElementById(e.target.value).className = \"answ btn btn-success\"\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    async submitAnswer() {\n        if(this.state.answer == this.props.words.vietnamese){\n            document.getElementById(\"loadAnswer\").className = \"spinner-grow text-warning spinner-grow-sm\"\n            console.log(\"Correct answer\")\n            // this.postRecord(this.props.userId, this.props.words.id, this.state.startTime, this.getTime(), this.state.minute)\n            await this.waiting(1000);\n            this.setState({takingTest: false})\n            if(this.state.learnMode == \"sequence\"){\n                this.sequence()\n            }\n            else if(this.state.learnMode == \"random\"){\n                this.random()\n            }\n            this.setState({answer: \"\", second: 0, minute: 0})\n            console.log(\"waitinng\")\n        }\n        else{\n            document.getElementById(\"wrong-answer\").innerHTML = \"Wrong answer\"\n            console.log(\"Wrong answer\")\n        }\n    }\n\n    getAnswers(word, randomInt){\n        var answerIndex = []\n        while (answerIndex.length != 10) {\n            var random_nb = Math.floor(Math.random() * 10000);\n            if(random_nb != randomInt){\n                answerIndex.push(random_nb)\n            }\n        }\n        console.log(\"answerIndex\")\n        console.log(answerIndex)\n\n        var answers = []\n        var indexOf_correctAnswer = Math.floor(Math.random() * 4);\n        var i = 0\n        for (let index = 0; index < 4; index++) {\n            if(index == indexOf_correctAnswer){\n                answers.push(word.vietnamese)\n                continue\n            }\n            var current_word = this.props.allWords[answerIndex[index]]\n            console.log(index)\n            console.log(answerIndex[index])\n            console.log(current_word)\n            answers.push(this.props.allWords[answerIndex[index]].vietnamese)\n            i = i +1\n        }\n        this.props.dispatch({ type: \"GET_ANSWERS\", payload: answers })\n            \n        \n\n        // for (let index = 0; index < answerIndex.length; index++) {\n        //     answers.push(this.props.allWords[answerIndex[index]].vietnamese)\n        // }\n        // this.props.dispatch({ type: \"GET_ANSWERS\", payload: answers })\n\n        // fetch(`https://www.englishmaster.icu:9000/get_wrongAnswers/${word.word}`)\n        //     .then(res => res.json())\n        //     .then(wrongAnswers =>{\n        //         var answers = []\n        //         var indexOf_correctAnswer = Math.floor(Math.random() * 4);\n                \n        //         var i = 0\n        //         for (let index = 0; index < 4; index++) {\n        //             if(index == indexOf_correctAnswer){\n        //                 console.log(indexOf_correctAnswer)\n        //                 console.log(word.vietnamese)\n        //                 answers.push(word.vietnamese)\n        //                 continue\n        //             }\n        //             console.log(wrongAnswers[i].vietnamese)\n        //             answers.push(wrongAnswers[i].vietnamese)\n        //             i = i +1\n        //         }\n        //         this.props.dispatch({ type: \"GET_ANSWERS\", payload: answers })\n        //     }\n        // );\n    }\n\n     sequence(){\n         fetch(`https://www.englishmaster.icu:9000/get_${this.state.difficulty}_sequenceWord/${this.props.userId}`)\n            .then(res => res.json())\n            .then(word =>{\n                console.log(word[0])\n                this.props.dispatch({ type: \"GET_USER_WORDS\", payload: word[0] })\n                // this.getAnswers(word[0])\n            } \n        );\n        lastestIndex += 1\n        this.props.dispatch({ type: \"GET_USER_WORDS\", payload: this.props.allWords[lastestIndex] })\n        this.getAnswers(this.props.allWords[lastestIndex], lastestIndex)\n    }\n\n\n\n     random(){\n        // fetch(`https://www.englishmaster.icu:9000/get_${this.state.difficulty}_randomWord/${this.props.userId}`)\n        //     .then(res => res.json())\n        //     .then(word =>{\n        //         this.props.dispatch({ type: \"GET_USER_WORDS\", payload: word[0] })\n        //         this.getAnswers(word[0])\n        //     }\n        //     );\n        var randomInt = Math.floor(Math.random() * 10000);\n        this.props.dispatch({ type: \"GET_USER_WORDS\", payload: this.props.allWords[randomInt] })\n        this.getAnswers(this.props.allWords[randomInt], randomInt)\n    }\n\n    waiting(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms))\n    }\n\n\n    async selectMode(e) {\n        this.setState({ learnMode: e.target.value })\n        if(e.target.value == \"sequence\"){\n            this.sequence()\n        }\n        else if(e.target.value == \"random\"){\n            this.random()\n        }\n        document.getElementById(\"loadMode1\").className = \"spinner-border text-secondary spinner-border-sm\"\n        document.getElementById(\"loadMode2\").className = \"spinner-border text-secondary spinner-border-sm\"\n        await this.waiting(1000);\n        this.setState({ startTime: this.getTime()})\n        \n        \n        this.setState({ displayed_hello: true })\n        this.settup_test(\"chosen\")\n       \n        \n    }\n\n    selectLevel(e){\n        this.setState({difficulty: e.target.value})\n    }\n\n    renderHello() {\n        return (\n            <div>\n                <div class=\"jumbotron\">\n                    <h4>Hello, are you ready to learn new words?</h4> <br />\n                    {this.state.difficulty == \"\"?\n                    <div>\n                    <h3>Select Level:</h3>\n                    <button onClick={this.selectLevel.bind(this)} value=\"easy\">Easy</button>\n                    <button onClick={this.selectLevel.bind(this)} value=\"normal\">Normal </button>\n                    <button onClick={this.selectLevel.bind(this)} value=\"difficult\">Difficult </button>\n                </div>\n                :\n                <div>\n                    <h3>Select modes:</h3>\n                    <button onClick={this.selectMode.bind(this)} value=\"random\">Random <span id = \"loadMode1\"></span></button>\n                    <button onClick={this.selectMode.bind(this)} value=\"sequence\">Sequence <span id = \"loadMode2\"></span></button>\n\n                </div>\n                }\n                </div>\n            </div>\n        )\n    }\n\n    renderTest() {\n        return (\n            <div>\n                <ReactInterval timeout={1000} enabled={true}\n                    callback={() => this.recordTime()} />\n\n                <div class=\"col-md-8 offset-md-2\">\n\n                    <div className=\"card\">\n                        <div class=\"card-header\">\n                            <h4 class=\"text-center guessing-word\">{this.props.words.word}</h4> </div>\n\n                        <div class=\"card-body\">\n                            <div class=\"answ btn-group-vertical\" onClick={this.handleClick.bind(this)}>\n                            {/* CHANGE THIS LINE */}\n\n                                {this.props.answers.map(s =>\n                                    <button id={s} name=\"answer\" value={s} type=\"button\" class=\"answ btn btn-secondary\">{s}</button>\n                                )}\n                            </div>\n                        </div>\n                        <div class=\"card-footer\">\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <div id=\"wrong-answer\"></div>\n                                </div>\n\n                                <div className=\"col\">\n                                    <button className=\"btn btn-primary float-right\" onClick={this.submitAnswer.bind(this)}>Answer \n                                    <span id = \"loadAnswer\"></span>\n                                    </button>\n\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n\n\n    checkTime(time) {\n        if (time < 10) {\n            time = \"0\" + time\n        }\n        return time\n    }\n\n\n\n    renderWordDetail() {\n\n        return (\n            <div>\n\n                <ReactInterval timeout={1000} enabled={true}\n                    callback={() => this.recordTime()} />\n\n\n            <div className=\"col-md-8 offset-md-2\">\n                    \n                    <div className=\"card\">\n                        <div class=\"card-header\">\n                            <h4 class=\"text-center\">{this.props.words.word} &nbsp; <button className=\"btn btn-info\" onClick={() => window.responsiveVoice.speak(this.props.words.word)}><i className=\"fa fa-volume-up\" aria-hidden=\"true\"></i></button>\n\n                            </h4>\n                        </div>\n\n                        <div class=\"card-body\">\n                            <li>Meaning: {this.props.words.vietnamese}</li> <br />\n                            <li>Synonym: {this.props.words.similar_word}</li>  <br />\n                            <li>Example 1: {this.props.words.ex1}</li> <br />\n                            <li>Example 2: {this.props.words.ex2}</li>\n                        </div>\n                        <div class=\"card-footer\">\n                            <div id=\"wrong-answer\"></div>\n\n                            <div className=\"row\">\n                                <div className=\"col-md-8\">\n                                    <Pronounce word={this.props.words.word} />\n                                </div>\n                                <div className=\"col-md-4\">\n                                    <button className=\"btn btn-primary float-right\" onClick={this.settup_test.bind(this)}>Test</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n\n    render() {\n        return (\n            <div>\n\n                {!this.state.displayed_hello ?\n                    this.renderHello()\n                    : this.state.takingTest ?\n                        this.renderTest()\n                        : this.renderWordDetail()\n                }\n\n            </div>\n        )\n    }\n\n\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport Word from \"./containers/admin/Word.js\"\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport Login from \"./containers/cognito/Login\";\nimport { Auth } from \"aws-amplify\";\nimport config from \"./Config\";\nimport Register from \"./containers/cognito/Register\";\nimport User from \"./containers/User\"\nimport \"./App.css\"\nimport admin from \"./containers/admin/admin\"\nimport words from \"./word_difficulty.json\"\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {}\n  }\n\n  get_words() {\n\n    // fetch(`https://www.englishmaster.icu:9000/words`)\n    //   .then(res => res.json())\n    //   .then(words =>\n    //     this.props.dispatch({ type: \"GET_WORDS\", payload: words })\n    //   );\n    console.log(words)\n    this.props.dispatch({ type: \"GET_WORDS\", payload: words })\n  }\n\n  async componentWillMount() {\n    this.get_words()\n    \n  }\n\n\n  renderLoggin() {\n    return (\n      <div>\n\n        <nav class=\"navbar navbar-expand-sm bg-dark navbar-dark fixed-top\">\n          <a class=\"navbar-brand\" href=\"/\">EnglishMaster</a>\n        </nav>\n\n        <br /> <br /> <br /> <br /> <br />\n        <div>\n              <User answers = {this.props.answers} userId={this.props.userId} username={this.props.username}\n              allWords = {this.props.words}\n               dispatch={this.props.dispatch} words={this.props.userWords} />\n            </div>\n\n      </div>\n    )\n  }\n\n\n  render() {\n    return (\n      <div className=\"container\">\n        {this.renderLoggin()}\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(centralState) {\n  return {\n    words: centralState.words,\n    editedWord: centralState.editedWord,\n    authenticated: centralState.authenticated,\n    isAuthenticating: centralState.isAuthenticating,\n    username: centralState.username,\n    userId: centralState.userId,\n    userWords: centralState.userWords,\n    answers: centralState.answers\n  }\n}\n\n\nexport default withRouter(connect(mapStateToProps)(App));\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport { combineReducers, createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport Amplify from 'aws-amplify';\nimport config from \"./Config\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n\n//--------------------------------------------------- ESTATE---------------------------------------------------------------------\n\nAmplify.configure({\n    Auth: {\n        mandatorySignIn: true,\n        region: config.cognito.REGION,\n        userPoolId: config.cognito.USER_POOL_ID,\n        identityPoolId: config.cognito.IDENTITY_POOL_ID,\n        userPoolWebClientId: config.cognito.APP_CLIENT_ID\n    }\n});\n\nfunction isAuthenticating(state = true, action){\n    if (action.type === \"AUTHENTICATING\") {\n        return action.payload\n    }\n    else return state\n}\n\nfunction authenticated(state = false, action) {\n    if (action.type === \"AUTHENTICATE\") {\n        return action.payload\n    }\n    else return state\n}\n\nfunction authenticating(state = true, action) {\n    if (action.type === \"AUTHENTICATING\") {\n        return action.payload\n    }\n    else return state\n}\n\nfunction words(state = [], action) {\n    if (action.type === \"GET_WORDS\") {\n        return action.payload;\n    }\n    else return state;\n}\n\nfunction userWords(state = [], action) {\n    if (action.type === \"GET_USER_WORDS\") {\n        return action.payload;\n    }\n    else return state;\n}\n\nfunction answers(state = [], action){\n    if (action.type === \"GET_ANSWERS\") {\n        return action.payload;\n    }\n    else return state;\n}\n\nfunction editedWord(state = {}, action) {\n    if (action.type === \"GET_EDITED_WORD\") {\n        return action.payload\n    }\n    else if (action.type === \"RESET_EDITTED_WORD\") {\n        return action.payload\n    }\n    else {\n        return state\n    }\n}\n\nfunction username(state = \"\", action){\n    if (action.type === \"GET_USERNAME\") {\n        return action.payload\n    }\n    else {\n        return state\n    }\n}\n\nfunction userId(state = \"\", action){\n    if (action.type === \"GET_USERID\") {\n        return action.payload\n    }\n    else {\n        return state\n    }\n}\n\n\n\nvar centralState = combineReducers({\n    words, editedWord, authenticated, authenticating, isAuthenticating, username, userId, userWords, answers\n})\n\nvar store = createStore(centralState, applyMiddleware(thunk))\n\n\nReactDOM.render(\n\n    <Provider store={store}>\n   <Router>\n            <App />\n            </Router>\n    </Provider>\n    , document.getElementById('root')\n\n)"],"sourceRoot":""}